#SKHD STUFF

# if you're having troubles finding key codes for a key just type skhd --observe in a terminal and type a key. Pretty cool! Or just check the wiki.

## HYPER == SHIFT + CMD + ALT + OPTION

## Quickly restart the yabai launch agent
ctrl + alt + cmd - r : launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"

## Close active application
hyper - backspace : $(yabai -m window $(yabai -m query --windows --window | jq -re ".id") --close)

# test a command
# lshift - x : terminal-notifier -message "lshift - x"
#lshift - x : terminal-notifier -message "$(yabai -m query --windows --window | jq -re ".id")"

## open terminal
hyper - return : /Applications/iTerm.app/Contents/MacOS/iTerm2
## open obsidian
hyper - o : /Applications/Obsidian.app/Contents/MacOS/Obsidian
#open vscode
hyper - v : /Applications/VSCode.app/Contents/MacOS/Electron
#open firefox
hyper - x : /Applications/Firefox.app/Contents/MacOS/firefox
#open anki
hyper - n : /Applications/Anki.app/Contents/MacOS/anki
#open alacritty
hyper - t : /Applications/Alacritty.app/Contents/MacOS/alacritty
#open discord
ctrl +cmd - d  : /Applications/Discord.app/Contents/MacOs/Discord
ctrl +cmd - k  : /Applications/Kitty.app/Contents/MacOs/kitty

## swap window
hyper - h : yabai -m window --swap east
hyper - j : yabai -m window --swap south
hyper - k : yabai -m window --swap north
hyper - l : yabai -m window --swap west # 0x21 is the "[" key

#create new window needs SIP disabled
hyper + shift - n: yabai -m space --create && \
                   index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
                   yabai -m window --space "${index}" && \
                   yabai -m space --focus "${index}"

## focus display also needs SIP
hyper - 1 : yabai -m space --focus 1
hyper - 2 : yabai -m space --focus 2
hyper - 3 : yabai -m space --focus 3
hyper - 4 : yabai -m space --focus 4
hyper - 5 : yabai -m space --focus 5
hyper - 6 : yabai -m space --focus 6
hyper - 7 : yabai -m space --focus 7
hyper - 8 : yabai -m space --focus 8
hyper - 9 : yabai -m space --focus 9
hyper - 0x37 : yabai -m space --focus prev
hyper - 0x39 : yabai -m space --focus next

# focus then destroy space
cmd + ctrl - 1 : yabai -m space --focus 1 && yabai -m space --destroy
cmd + ctrl - 2 : yabai -m space --focus 2 && yabai -m space --destroy
cmd + ctrl - 3 : yabai -m space --focus 3 && yabai -m space --destroy
cmd + ctrl - 4 : yabai -m space --focus 4 && yabai -m space --destroy
cmd + ctrl - 5 : yabai -m space --focus 5 && yabai -m space --destroy
cmd + ctrl - 6 : yabai -m space --focus 6 && yabai -m space --destroy
cmd + ctrl - 7 : yabai -m space --focus 7 && yabai -m space --destroy
cmd + ctrl - 8 : yabai -m space --focus 8 && yabai -m space --destroy
cmd + ctrl - 9 : yabai -m space --focus 9 && yabai -m space --destroy
## increase window size
shift + alt - a : yabai -m window --resize left:-20:0
shift + alt - s : yabai -m window --resize bottom:0:20
shift + alt - w : yabai -m window --resize top:0:-20
shift + alt - d : yabai -m window --resize right:20:0

## decrease window size
shift + cmd - a : yabai -m window --resize left:20:0
shift + cmd - s : yabai -m window --resize bottom:0:-20
shift + cmd - w : yabai -m window --resize top:0:20
shift + cmd - d : yabai -m window --resize right:-20:0

## rotate tree 90
hyper - r : yabai -m space --rotate 90

## flip the tree vertically
hyper - 4 : yabai -m space --mirror y-axis
# mirror tree y-axis
#alt - y : yabai -m space --mirror y-axis
## mirror tree x-axis
#alt - x : yabai -m space --mirror x-axis

## toggle window fullscreen zoom
hyper - f : yabai -m window --toggle zoom-fullscreen

# cycle through windows
# cycle backwards
#hyper - i : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}
#hyper - i : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}

#alt - p : yabai -m window --focus stack.prev || yabai -m window --focus prev || yabai -m window --focus last
#`
# go to each window WITHOUT going into a stack
# ctrl + alt + cmd + lshift - i : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select((.\"stack-index\" <= 1) and (.app != \"Hammerspoon\"))]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}
ctrl + alt + cmd + lshift - i : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select(.app != \"Hammerspoon\")]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}

# ctrl + alt + cmd + rshift - i : yabai -m window --focus stack.prev || yabai -m window --focus stack.last

#hyper - 0x29 : yabai -m query --spaces \
#hyper - o : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | reverse | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}

#alt - n : yabai -m window --focus stack.next || yabai -m window --focus next || yabai -m window --focus first

# go to each window WITHOUT going into a stack
# ctrl + alt + cmd + lshift - o : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select((.\"stack-index\" <= 1) and (.app != \"Hammerspoon\"))]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | reverse | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}
ctrl + alt + cmd + lshift - o : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select(.app != \"Hammerspoon\")]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | reverse | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}

# Toggle foucus on a stack
ctrl + alt + cmd + lshift - return : yabai -m window --focus stack.next || yabai -m window --focus stack.first

#create a stack
ctrl + alt + cmd - 1 : yabai -m query --windows --window | jq -re "." | xargs -I{} yabai -m window 1 --stack {}
# stack next window onto current window
ctrl + alt + cmd - c : window=$(yabai -m query --windows --window | jq -r '.id') && yabai -m window east --stack $window || (yabai -m window $window --toggle float && yabai -m window $window --toggle float)

# focus on windows
ctrl + shift - 1 : yabai -m window --focus first #pretty self explanatory
ctrl + shift - 0 : yabai -m window --focus last #pretty self explanatory
# focus window in direction of focused window (options: north, east, south, west)
hyper - w : yabai -m window --focus north
hyper - a : yabai -m window --focus west
hyper - s : yabai -m window --focus south
hyper - d : yabai -m window --focus east

:: default : sketchybar --trigger skhd_enabled SKHD_ENABLED=false; sketchybar --trigger request_bg REQUEST_BG=false;
:: bg_select : sketchybar --trigger skhd_enabled SKHD_ENABLED=false; sketchybar --trigger request_bg REQUEST_BG=true;

# -- WALLPAPER SELECT -- #

default < ctrl - b ; bg_select
bg_select < ctrl - b; default

bg_select < tab : sketchybar --trigger cycle_bg CYCLE=next;
bg_select < shift - tab : sketchybar --trigger cycle_bg CYCLE=prev;

bg_select < return : sketchybar --trigger select_bg SELECT=true; 
bg_select < escape : sketchybar --trigger select_bg SELECT=false;
